library(swirl)
swirl()
head(airquality)
xyplot(Ozone ~ Wind, data = airquality)
xyplot(Ozone ~ Wind, data = airquality, col = "red", pch = 8, main = "Big Apple Data")
xyplot(Ozone ~ Wind | as.factor(Month), data = airquality, layout = c(5,1))
xyplot(Ozone ~ Wind | Month, data = airquality, layout = c(5,1))
p <- xyplot(Ozone~Wind, data = airquality)
p
names(p)
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
table(f)
xyplot(y~x|f, layout = c(2,1))
v1
v2
myedit("plot1.R")
myedit("plot1.R")
myedit(file = "plot1.R")
myedit
?file.edit
pathtofile("plot1.R")
myedit("plot1.R")
myedit("plot1.R")
myedit("plot1.R")
myedit("plot1.R")
myedit("plot1.R")
myedit("plot1.R")
myedit("plot1.R")
myedit
file.edit("plot1.R")
info()
main()
myedit("plot1.R")
options(editor = "internal")
info()
main()
play()
options(editor = "internal")
nxt()
myedit("plot1.R")
pathtofile("plot1.R", TRUE)
source(pathtofile("plot1.R"), TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"), TRUE)
str(diamonds)
table(diamonds$color)
table(diamonds$color, diamonds$cut)
myedit("myLabels.R")
source(pathtofile("myLabels.R"), TRUE)
xyplot(price ~ carat | color * cut, data = diamonds, strip = FALSE, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
xyplot(price ~ carat | color * cut, data = diamonds, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
swirl()
sample(colors(), 1)
sample(colors(), 10)
pal <- colorRamp(c("red","blue"))
pal(0)
pla(1)
pal(1)
pal(seq(0,1, len = 6))
p1 <- colorRampPalette(c("red","blue"))
p1(2)
p1(6)
0xCC
p2 <- colorRampPalette(c("red","yellow"))
p2(2)
p2(10)
showMe(p1(20))
showMe(p2(20))
showMe(p2(2))
p1
?rgb
p3 <- colorRampPalette(c("blue","green"), alpha = .5)
p3(5)
p3(5)
plot(x,y,pch=19,col=rgb(0,.5,.5))
plot(x,y,pch=19,col=rgb(0,.5,.5,.3))
cols <- brewer.pal(3, "BuGn")
showMe(cols)
pal <- colorRampPalette(cols)
showMe(pal(3))
showMe(pal(20))
image(volcano, col = pal(20))
image(volcano, col = p1(20))
swirl()
library(swirl)
swirl()
str(mpg)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg, color = drv)
qplot(displ, hwy, data = mpg, color = drv, geom = c("point", "smooth"))
qplot(y = hwy, data = mpg, color = drv)
myhigh
qplot(drv, hwy, data = mpg, geom = "boxplot")
qplot(drv, hwy, data = mpg, geom = "boxplot", color = manufacturer)
qplot(hwy, data = mpg, fill = drv)
qplot(displ, hwy, data = mpg, facets = .~drv)
qplot(hwy, data = mpg, facets = drv ~., binwidth = 2)
qplot(displ, hwy, data = mpg, geom = c("point","smooth"), facets = .~drv)
g <- ggplot(mpg, aes(displ, hwy))
summary(g)
g + geom_point()
g + geom_point() + geom_smooth()
g + geom_point() + geom_smooth(method = "lm")
g + geom_point() + geom_smooth(method = "lm") + facet_grid(. ~ drv)
g + geom_point() + geom_smooth(method = "lm") + facet_grid(. ~ drv) + ggtitle("Swirl Rules!")
g + geom_point(color = "pink", size = 4, alpha = 1/2)
g + geom_point(size = 4, alpha = 1/2, aes(color = drv))
g + geom_point(aes(color = drv)) + labs(title = "Swirl Rules!") + labs(x = "Displacement", y = "Hwy Mileage")
g + geom_point(aes(color = drv), size = 2, alpha = 1/2) + geom_smooth(size = 4, linetype = 3, method = "lm", se = FALSE)
g + geom_point(aes(color = drv)) + theme_bw(base_family = "Times")
plot(myx, myy, type = "l", ylim = c(-3,3))
g <- ggplot(testdat, aes(x =myx, y = myy))
g + geom_line(0)
g + geom_line()
g + geom_line() + ylim(-3,3)
g + geom_line() + coord_cartesian(ylim(-3,3))
g + geom_line() + coord_cartesian(ylim = c(-3,3))
g <- ggplot(dataset, aes(x = displ, y = hwy, color = factor(year)))
g <- ggplot(dataset = mpg, aes(x = displ, y = hwy, color = factor(year)))
g <- ggplot(mpg, aes(x = displ, y = hwy, color = factor(year)))
g + geom_point()
g + geom_point() + facet_grid(drv~cyl, margins = TRUE)
g + geom_point() + facet_grid(drv~cyl, margins = TRUE) + geom_smooth(method = "lm", se = FALSE, size = 2, color = "black")
g + geom_point() + facet_grid(drv~cyl, margins = TRUE) + geom_smooth(method = "lm", se = FALSE, size = 2, color = "black") + labs(x = "Displacement", y = "Highway Mileage", title = "Swirl Rules!")
str(diamonds)
qplot(price, data = diamonds)
range(diamonds$price)
qplot(price, data = diamonds, binwidth = 18497/30)
brk
counts
qplot(price, data = diamonds, binwidth = 18497/30, fill = cut)
qplot(price, data = diamonds, geom = "density")
qplot(price, data = diamonds, geom = "density", color = cut)
qplot(carat, price, data = dataset)
qplot(carat, price, data = diamonds)
qplot(carat, price, data = diamonds, shape = cut)
qplot(carat, price, data = diamonds, color = cut)
qplot(carat, price, data = diamonds, color = cut)
qplot(carat, price, data = diamonds, color = cut) + geom_smooth(method = "lm")
qplot(carat, price, data = diamonds, color = cut, facets = .~cut) + geom_smooth(method = "lm")
g <- ggplot(diamonds, aes(depth, price))
summary(g)
g + geom_point(alpha = 1/3)
cutpoints <- quantile(diamonds$carat, seq(0,1,len = 4), na.rm = TRUE)
cutpoints
diamonds$car2 <- cut(diamonds$carat, cutpoints)
g <- ggplot(diamonds, aes(depth, price))
g + geom_point(alpha = 1/3) + facet_grid(cut ~ car2)
diamonds[myd,]
g + geom_point(alpha = 1/3) + facet_grid(cut ~ car2) + geom_smooth(method = "lm", size = 3, color = "pink")
ggplot(diamonds, aes(carat, price)) + geom_boxplot() + facet_grid(. ~cut)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
?trellis.par.set
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(votes, rating, data = movies)
library(ggplot2)
movies
set.seed(12345)
par(mar = rep(0.2,4))
dataMatrix <- matrix(rnorm(400),nrow = 40)
dataMatrix
?image
image(1:10, 1:40)
image(1:10, 1:40, t(dataMatrix)[, nrow(dataMatrix):1])
t(dataMatrix)[, nrow(dataMatrix):1]
t(dataMatrix)
?t
image(1:10, 1:40, dataMatrix)
image(1:40, 1:10, dataMatrix)
image(1:10, 1:40, t(dataMatrix)[, nrow(dataMatrix):1])
t(dataMatrix)[, nrow(dataMatrix):1]
dataMatrix
heatmap(dataMatrix)
dataMatrix <- matrix(0,nrow = 40,ncol = )
dataMatrix <- matrix(0,nrow = 40,ncol = 40)
dataMatrix
for(i in 1:40){dataMatrix[i,] <- rep(c(0,1), each = 5)}
image(dataMatrix)
image(t(dataMatrix))
image(t(dataMatrix)[,40:1])
image(t(dataMatrix))
image(t(dataMatrix)[,40:1])
?rep
dataMatrix
dataMatrix <- matrix(0,nrow = 40,ncol = 10)
for(i in 1:40){dataMatrix[i,] <- rep(c(0,1), each = 5)}
image(dataMatrix)
image(t(dataMatrix))
image(t(dataMatrix)[,40:1])
svd1 <- svd(dataMatrix)
svd1$d
plot(svd1$d)
svd1$v
svd1$u
library(swirl)
swirl()
dist(dataFrame)
hc <- hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline( h = 1.5, col = "blue")
abline(h=.4, col = "red")
5
5
12
abline(h = 0.5, col = "green")
dist(dFsm)
hc
heatmap(dataMatrix, col = cm.colors(25))
View(dataFrame)
heatmpa(mt)
heatmp(mt)
heatmap(mt)
mt
plot(denmt)
distmt
library(swirl)
swirl()
cmat
points(cx, cy, col = c("red","orange","purple"), pch = 3, cex = 2, lwd = 2)
mdist
x
x - cx[1]
mdist(x,y,cx,cy)
apply(distTmp, 2, which.min)
points(x,y, pch = 19, cex = 2, col = cols1[newClust])
tapply(x, newClust, mean)
tapply(y, newClust, mean)
points(newCx, newCy, col = cols1, pch = 8, cex = 2, lwd = 2)
mdist(x, y, newCx, newCy)
apply(distTmp2, 2, which.min)
points(x, y, pch = 19, cex = 2, col = cols1[newClust2])
tapply(x, newClust2, mean)
tapply(y, newClust2, mean)
points(finalCx, finalCy, col = cols1, pch = 9, cex = 2, lwd = 2)
kmeans(dataFrame, centers = 3)
kmObj$iter
plot(x, y, kmObj$cluster, pch = 19, cex = 2)
points(x, y, kmObj$cluster, pch = 19, cex = 2)
points(x, y, col = kmObj$cluster, pch = 19, cex = 2)
plot(x, y, col = kmObj$cluster, pch = 19, cex = 2)
points(kmObj$centers, col = c("black","red","green"), pch = 3, cex = 3, lwd = 3)
plot(x, y, col = kmeans(dataFrame,6)$cluster, pch = 19, cex = 2)
plot(x, y, col = kmeans(dataFrame,6)$cluster, pch = 19, cex = 2)
plot(x, y, col = kmeans(dataFrame,6)$cluster, pch = 19, cex = 2)
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
quit
options(editor = "internal")
quit()
options(editor = "internal")
library(swirl)
swirl()
myedit("addPatt.R")
filename("addPatt.R", TRUE)
source("addPatt.R", TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu %*% diag %*% t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd$v[,1]
svd1$v[,1]
svd1$d
head(constantMAtrix)
head(constantMatrix)
svd2$d
svd2
svd2$v[,1:2]
svd2$d
dim(faceData)
a1 <- svd1$u[,1] %*% svd1$v[,1] * svd1$d[1]
a1 <- svd1$u[,1] %*% t(svd1$v[,1]) * svd1$d[1]
myImage(a1)
s2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
a2 <- svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5])
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
dim(ssd)
names(ssd[,562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd, subject == 1)
dim(sub1)
names[sub1[,1:12]]
names(sub1[,1:12])
myedit("showXY.R")
showMe(1:6)
mdist <- dist(sub1[,1:3])
mdist
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
mdist <- dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust(hclustering, unclass(sub1$activity))
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd(scale(sub1[,-c(562,563)]))
svd1 <- svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
maxCon <- which.ma(svd1$v[,2])
maxCon <- which.max(svd1$v[,2])
dist(c(sub1[,10:12], maxCon))
we
sub()
sub1
mdist <- dist(sub1[,c(10:12,maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
names(sub1[maxCon])
kClust <- kmeans(sub1[, -2], centers = 6)
kClust <- kmeans(sub1[, 1:-2], centers = 6)
kClust <- kmeans(sub1[, -c(562,56)], centers = 6)
kClust <- kmeans(sub1[, 1], centers = 6)
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6, nstart = 100)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
laying <- kClust$size == 29
laying <- which(kClust$size == 29)
1+1
plot(kClust$centers[laying, 1:12],pch=19,ylab="Laying Cluster")
names(sub1[,1:3])
walkdown <- which(kClust$size == 49)
plot(kClust$centers[walkdown, 1:12],pch=19,ylab="Walkdown Cluster")
ggplot(results, aes(year, total, EI.Sector)) + geom_point(aes(color = fips), size = 2)
library(ggplot2)
library(dplyr)
setwd("C:\\Users\\Jesus\\Google Drive\\Coursera\\Data Science\\Course 4 - Exploratory Data Analysis\\Course Project 2")
SCC <- readRDS("Source_Classification_Code.rds")
sources <- grep("Vehicle",unique(SCC$EI.Sector), value = TRUE) #Get all industries that are related with coal
sccShort <- SCC %>% filter(EI.Sector %in% sources) %>% select(SCC, EI.Sector) #filter only the codes of coal industries
NEI <- readRDS("summarySCC_PM25.rds")
vehicleBothNEI <- NEI %>% filter(SCC %in% sccShort$SCC & (fips == "24510" | fips == "06037")) #just want scc related with vehicles in baltimore
t <- sapply(vehicleBothNEI$SCC, function(x) {sccShort[sccShort$SCC == x, 2]})
vehicleBothNEI <- vehicleBothNEI %>% mutate(EI.Sector = t) #merge scc code with the industry
head(vehicleBothNEI)
results <- vehicleBothNEI %>% group_by(year,EI.Sector,fips) %>% summarize(total = sum(Emissions, na.rm = TRUE)) #compute sum
unique(results$EI.Sector)
new_names <- c(
"Mobile - On-Road Diesel Heavy Duty Vehicles"="Diesel Heavy",
"Mobile - On-Road Diesel Light Duty Vehicles"="Diesel Light",
"Mobile - On-Road Gasoline Heavy Duty Vehicles"="Gasoline Heavy",
"Mobile - On-Road Gasoline Light Duty Vehicles"="Gasoline Light"
)
ggplot(results, aes(year, total, EI.Sector)) + geom_point(aes(color = fips), size = 2)
ggplot(results, aes(year, total, EI.Sector)) + geom_point(aes(color = fips), size = 2) + scale_x_discrete(limits = results$year, expand = c(0.1, 0.9)) +
facet_grid(EI.Sector ~ ., scales = "free_y", labeller = as_labeller(new_names)) +
scale_fill_discrete(labels = c("A","B")) +
labs(y ="Total emission (in tons)") + labs(title = "Total emission by EI.Sector of motor vehicles")
ggplot(results, aes(year, total, EI.Sector)) +
geom_point(aes(color = factor(fips, labels = c("A","B"))), size = 2) +
scale_x_discrete(limits = results$year, expand = c(0.1, 0.9)) +
facet_grid(EI.Sector ~ ., scales = "free_y", labeller = as_labeller(new_names)) +
labs(y ="Total emission (in tons)") +
labs(title = "Total emission by EI.Sector of motor vehicles")
ggplot(results, aes(year, total, EI.Sector)) +
geom_point(aes(color = factor(fips, labels = c("24510"="A","06037"="B"))), size = 2) +
scale_x_discrete(limits = results$year, expand = c(0.1, 0.9)) +
facet_grid(EI.Sector ~ ., scales = "free_y", labeller = as_labeller(new_names)) +
labs(y ="Total emission (in tons)") +
labs(title = "Total emission by EI.Sector of motor vehicles")
?factor
ggplot(results, aes(year, total, EI.Sector)) +
geom_point(aes(color = factor(fips, levels = c("24510", "06037"), labels = c("A","B"))), size = 2) +
scale_x_discrete(limits = results$year, expand = c(0.1, 0.9)) +
facet_grid(EI.Sector ~ ., scales = "free_y", labeller = as_labeller(new_names)) +
labs(y ="Total emission (in tons)") +
labs(title = "Total emission by EI.Sector of motor vehicles")
ggplot(results, aes(year, total, EI.Sector)) +
geom_point(aes(color = factor(fips, levels = c("24510", "06037"), labels = c("A","B"))), size = 2) +
scale_x_discrete(limits = results$year, expand = c(0.1, 0.9)) +
facet_grid(EI.Sector ~ ., scales = "free_y", labeller = as_labeller(new_names)) +
labs(y ="Total emission (in tons)") +
labs(title = "Total emission by EI.Sector of motor vehicles")  + scale_fill_discrete(name="Experimental\nCondition")
ggplot(results, aes(year, total, EI.Sector)) +
geom_point(aes(color = factor(fips, levels = c("24510", "06037"), labels = c("Baltimore City","Los Angeles County"))), size = 2) +
scale_x_discrete(limits = results$year, expand = c(0.1, 0.9)) +
facet_grid(EI.Sector ~ ., scales = "free_y", labeller = as_labeller(new_names)) +
labs(y ="Total emission (in tons)") +
labs(title = "Total emission by EI.Sector of motor vehicles")  + scale_fill_discrete(name="Experimental\nCondition")
ggplot(results, aes(year, total, EI.Sector)) +
geom_point(aes(color = factor(fips, levels = c("24510", "06037"), labels = c("Baltimore City","Los Angeles County"))), size = 2) +
scale_x_discrete(limits = results$year, expand = c(0.1, 0.9)) +
facet_grid(EI.Sector ~ ., scales = "free_y", labeller = as_labeller(new_names)) +
labs(y ="Total emission (in tons)") +
labs(title = "Total emission by EI.Sector of motor vehicles") +
scale_fill_manual("Experimental\nCondition")
ggplot(results, aes(year, total, EI.Sector)) +
geom_point(aes(color = factor(fips, levels = c("24510", "06037"), labels = c("Baltimore City","Los Angeles County"))), size = 2) +
scale_x_discrete(limits = results$year, expand = c(0.1, 0.9)) +
facet_grid(EI.Sector ~ ., scales = "free_y", labeller = as_labeller(new_names)) +
labs(y ="Total emission (in tons)") +
labs(title = "Total emission by EI.Sector of motor vehicles") +
labs(colour="Petal width label")
ggplot(results, aes(year, total, EI.Sector)) +
geom_point(aes(color = factor(fips, levels = c("24510", "06037"), labels = c("Baltimore City","Los Angeles County"))), size = 2) +
scale_x_discrete(limits = results$year, expand = c(0.1, 0.9)) +
facet_grid(EI.Sector ~ ., scales = "free_y", labeller = as_labeller(new_names)) +
labs(y ="Total emission (in tons)") +
labs(title = "Total emission by EI.Sector of motor vehicles") +
labs(colour="City")
plot6 <- function()
{
library(ggplot2)
library(dplyr)
setwd("C:\\Users\\Jesus\\Google Drive\\Coursera\\Data Science\\Course 4 - Exploratory Data Analysis\\Course Project 2")
SCC <- readRDS("Source_Classification_Code.rds")
sources <- grep("Vehicle",unique(SCC$EI.Sector), value = TRUE) #Get all industries that are related with coal
sccShort <- SCC %>% filter(EI.Sector %in% sources) %>% select(SCC, EI.Sector) #filter only the codes of coal industries
NEI <- readRDS("summarySCC_PM25.rds")
vehicleBothNEI <- NEI %>% filter(SCC %in% sccShort$SCC & (fips == "24510" | fips == "06037")) #just want scc related with vehicles in baltimore
t <- sapply(vehicleBothNEI$SCC, function(x) {sccShort[sccShort$SCC == x, 2]})
vehicleBothNEI <- vehicleBothNEI %>% mutate(EI.Sector = t) #merge scc code with the industry
head(vehicleBothNEI)
results <- vehicleBothNEI %>% group_by(year,EI.Sector,fips) %>% summarize(total = sum(Emissions, na.rm = TRUE)) #compute sum
unique(results$EI.Sector)
new_names <- c(
"Mobile - On-Road Diesel Heavy Duty Vehicles"="Diesel Heavy",
"Mobile - On-Road Diesel Light Duty Vehicles"="Diesel Light",
"Mobile - On-Road Gasoline Heavy Duty Vehicles"="Gasoline Heavy",
"Mobile - On-Road Gasoline Light Duty Vehicles"="Gasoline Light"
)
p <- ggplot(results, aes(year, total, EI.Sector)) +
geom_point(aes(color = factor(fips, levels = c("24510", "06037"), labels = c("Baltimore City","Los Angeles County"))), size = 2) +
scale_x_discrete(limits = results$year, expand = c(0.1, 0.9)) +
facet_grid(EI.Sector ~ ., scales = "free_y", labeller = as_labeller(new_names)) +
labs(y ="Total emission (in tons)") +
labs(title = "Total emission by EI.Sector of motor vehicles") +
labs(colour="City")
png(file="plot6.png",width=480,height=480)
print(p)
dev.off()
}
plot6()
